name: Test all targets

on: [push, pull_request]

permissions:
  contents: write

jobs:
  build-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            args: '--target aarch64-apple-darwin'
            label: 'Mac-ARM64'
          - platform: 'macos-latest'
            args: '--target x86_64-apple-darwin'
            label: 'Mac-x86'
          - platform: 'ubuntu-22.04'
            args: ''
            label: 'Linux'
          - platform: 'windows-latest'
            args: ''
            label: 'Windows'
          - platform: 'ubuntu-latest'
            args: ''
            label: 'Android'

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf pkg-config libssl-dev

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      # Android-specific setup
      - name: Setup Java (Android)
        if: matrix.label == 'Android'
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Android SDK (Android)
        if: matrix.label == 'Android'
        uses: android-actions/setup-android@v3

      - name: Install NDK (Android)
        if: matrix.label == 'Android'
        run: sdkmanager "ndk;27.0.11902837"

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || matrix.label == 'Android' && 'aarch64-linux-android,armv7-linux-androideabi,i686-linux-android,x86_64-linux-android' || '' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: install frontend dependencies
        run: bun install
        working-directory: ./desktop

      - name: Install Tauri CLI
        run: |
          cargo install tauri-cli
          cargo install cargo-ndk
        if: matrix.label == 'Android'

      - name: Configure Rust flags for Windows
        if: matrix.platform == 'windows-latest'
        run: |
          Add-Content -Path $env:GITHUB_ENV -Value "RUSTFLAGS=-C target-feature=+crt-static"
        shell: pwsh

      # Run pre build
      - name: Run pre_build.js
        run: bun scripts/pre_build.js

      # Android-specific build step
      - name: Initialize Tauri Android
        if: matrix.label == 'Android'
        working-directory: ./desktop
        run: |
          cargo tauri android init

      - name: Build Android APK
        if: matrix.label == 'Android'
        working-directory: ./desktop
        run: |
          cargo tauri android build --debug
        env:
          NDK_HOME: ${{ env.ANDROID_HOME }}/ndk/27.0.11902837

      # Regular build step for other platforms
      - name: Build the app (non-Android)
        if: matrix.label != 'Android'
        id: tauri-build
        uses: tauri-apps/tauri-action@v0.5.13
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          projectPath: './desktop'
          args: ${{ matrix.args }}
          tauriScript: bunx tauri

      # Upload artifacts for non-Android builds
      - name: Upload artifacts (non-Android)
        if: matrix.label != 'Android'
        uses: actions/upload-artifact@v4.4.0
        with:
          name: 'desktop-app-${{steps.tauri-build.outputs.appVersion}}_${{ matrix.label }}'
          path: "${{ join(fromJSON(steps.tauri-build.outputs.artifactPaths), '\n') }}"
          retention-days: 5

      # Upload Android APK artifact
      - name: Upload Android APK
        if: matrix.label == 'Android'
        uses: actions/upload-artifact@v4.4.0
        with:
          name: 'desktop-app-android-debug'
          path: 'desktop/src-tauri/gen/android/app/build/outputs/apk/debug/*.apk'
          retention-days: 5